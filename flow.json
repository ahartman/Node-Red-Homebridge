[
    {
        "id": "af688e5.b55d57",
        "type": "tab",
        "label": "Startup/switches",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eeb0c954.d943d",
        "type": "tab",
        "label": "Agendasturing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ef737c5d.8fdfe",
        "type": "tab",
        "label": "Lichtsturing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b798ba0e.5afac8",
        "type": "tab",
        "label": "Regels",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7535b2d2.99fc5c",
        "type": "subflow",
        "name": "set tradfri",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 100,
                "wires": [
                    {
                        "id": "a38e848f.39acd8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7b789b02.b3d6e4",
        "type": "position-config",
        "name": "",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": "99",
        "timeZoneDST": "0",
        "stateTimeFormat": "3",
        "stateDateFormat": "12"
    },
    {
        "id": "61506dc1.940954",
        "type": "ical-config",
        "url": "https://p31-caldav.icloud.com:443/223639751/calendars/351E54A9-85EC-4AD6-A100-0B1435502C5F/",
        "caldav": "icloud",
        "name": "Marieke",
        "replacedates": false,
        "usecache": false,
        "username": "ahartman2@me.com",
        "password": "pvcv-lgxl-oguf-ckug",
        "calendar": "",
        "pastWeeks": "",
        "futureWeeks": ""
    },
    {
        "id": "3e48c330.8414ec",
        "type": "ical-config",
        "url": "https://p31-caldav.icloud.com:443/223639751/calendars/83335524-EB3F-44D7-B6A3-E126D258BD63/",
        "caldav": "icloud",
        "name": "Speciallekes",
        "replacedates": false,
        "usecache": false,
        "username": "ahartman2@me.com",
        "password": "pvcv-lgxl-oguf-ckug",
        "calendar": "",
        "pastWeeks": "0",
        "futureWeeks": "4"
    },
    {
        "id": "344d697e.5fd5fe",
        "type": "hb-conf",
        "username": "123-45-678",
        "macAddress": ""
    },
    {
        "id": "3a720637.38a402",
        "type": "tradfri-config",
        "name": "Rodeweg",
        "gatewayHost": "TRADFRI-Gateway-4491602d06e1.local",
        "identity": "tradfri_1632029711950",
        "preSharedKey": "lajSE0p42eRbscbF"
    },
    {
        "id": "409001a1.3e7a78",
        "type": "homekit-bridge",
        "bridgeName": "Node-RED bridge",
        "pinCode": "123-45-678",
        "port": "",
        "allowInsecureRequest": false,
        "manufacturer": "NRCHKB",
        "model": "Node-RED bridge",
        "serialNo": "1.1.2",
        "firmwareRev": "",
        "hardwareRev": "",
        "softwareRev": "",
        "customMdnsConfig": false,
        "mdnsMulticast": true,
        "mdnsInterface": "",
        "mdnsPort": "",
        "mdnsIp": "",
        "mdnsTtl": "",
        "mdnsLoopback": true,
        "mdnsReuseAddr": true,
        "allowMessagePassthrough": true
    },
    {
        "id": "e53221d8.864cd",
        "type": "function",
        "z": "ef737c5d.8fdfe",
        "name": "calc",
        "func": "let circadian = global.get('circadian')\nlet settings = circadian.settings\nlet times= circadian.times\nlet praktijk = global.get('praktijk')\nlet sun = praktijk.sun_position\nlet sun_percent = msg.payload.altitudePercent/100\nlet dateNow = Date.now()\n\nif (sun == 'day'){\n    colorTemperature = (settings.set_max-settings.set_min) * sun_percent + settings.set_min\n    brightness = settings.brightness_max\n} else if (sun == 'night'){\n    colorTemperature = settings.set_min\n    brightness = settings.brightness_min\n} else {\n    if(sun == 'dawn'){\n        periodDuration = times.sunrise - times.dawn\n        periodActual = dateNow - times.dawn\n    } else if (sun == 'dusk') {\n        periodDuration = times.dusk - times.sunset\n        periodActual = times.dusk - dateNow\n    } else {\n        node.error({payload: 'problem in Calc', sun : praktijk.sun})\n    }\n    brightness = (settings.brightness_max - settings.brightness_min) * periodActual/periodDuration + settings.brightness_min\n    colorTemperature = settings.set_min\n}\ncolorTemperature = 100 - (100 * (colorTemperature - settings.bulb_min)/(settings.bulb_max - settings.bulb_min))\n\nnewMsg = {\n    'payload': {\n        'colorTemperature': parseInt(colorTemperature.toFixed(0)),\n        'brightness': parseInt(brightness.toFixed(0))\n        }\n    }\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 260,
        "wires": [
            [
                "f8c88755.5dcc58"
            ]
        ]
    },
    {
        "id": "fd5b71cd.f759d",
        "type": "delay",
        "z": "7535b2d2.99fc5c",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 350,
        "y": 80,
        "wires": [
            [
                "7302852c.5e9e84"
            ]
        ]
    },
    {
        "id": "a38e848f.39acd8",
        "type": "function",
        "z": "7535b2d2.99fc5c",
        "name": "Split payload",
        "func": "let payload = msg.payload\nlet transition = 5\n\nlet brightness = {\n    topic: msg.topic,\n    payload: {\n        transitionTime : transition,\n        brightness: payload.brightness\n    }\n}\n\nvar colorTemperature = null\nif (payload.hasOwnProperty('colorTemperature')) {\n    colorTemperature = {\n        topic: msg.topic,\n        payload: {\n            transitionTime : transition,\n            colorTemperature: payload.colorTemperature\n        }\n    }\n}\n\nreturn [colorTemperature, brightness]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 100,
        "wires": [
            [
                "fd5b71cd.f759d"
            ],
            [
                "994c6b54.5d27c8"
            ]
        ]
    },
    {
        "id": "b849cdcd.7fe5c",
        "type": "subflow:7535b2d2.99fc5c",
        "z": "ef737c5d.8fdfe",
        "name": "",
        "env": [],
        "x": 960,
        "y": 260,
        "wires": []
    },
    {
        "id": "229c3de4.f3d552",
        "type": "comment",
        "z": "ef737c5d.8fdfe",
        "name": "Manage Circadian color temperature and brightness",
        "info": "",
        "x": 230,
        "y": 200,
        "wires": []
    },
    {
        "id": "7ec5bf43.163b4",
        "type": "sun-position",
        "z": "ef737c5d.8fdfe",
        "name": "sun %",
        "positionConfig": "7b789b02.b3d6e4",
        "rules": [],
        "onlyOnChange": "true",
        "topic": "msg.topic",
        "outputs": 1,
        "start": "",
        "startType": "none",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "end": "",
        "endType": "none",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "e53221d8.864cd"
            ]
        ]
    },
    {
        "id": "2ca65b5f.b4ea04",
        "type": "inject",
        "z": "ef737c5d.8fdfe",
        "name": "circadian timer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "timer",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "7ec5bf43.163b4"
            ]
        ]
    },
    {
        "id": "f8c88755.5dcc58",
        "type": "function",
        "z": "ef737c5d.8fdfe",
        "name": "set entities",
        "func": "let payload     = msg.payload\nlet topic       = msg.topic\nlet circadian   = global.get('circadian')\nlet lights      = circadian.lights\nlet switches    = circadian.switches\nlet entities    = []\nlet names       = []\n\nif(topic){\n    node.warn('topic')   \n    node.warn(topic)\n} \n\nif(switches.circadisch_bureau == 'on') {\n    for (const light in lights) {\n        if (lights[light]['name'].includes('Bureau') && lights[light]['isOn']) {\n            entities.push(parseInt(light))\n            names.push(lights[light]['name'])\n        }\n    }\n} else {\n    node.warn(\"Sturing bureau uitgeschakeld\")\n}\n\nif(switches.circadisch_felix == 'on'){\n    for (const light in lights) {\n        if (lights[light]['name'].includes('Felix') && lights[light]['isOn']) {\n           entities.push(parseInt(light))\n           names.push(lights[light]['name'])\n        }\n    }\n}\n\nif (entities.length > 0){\n    msg.topic = entities\n    msg.payload = payload\n    msg.names = names\n    return msg\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 260,
        "wires": [
            [
                "d982241b.ffa208",
                "b849cdcd.7fe5c",
                "a09f1f3b66defb01"
            ]
        ]
    },
    {
        "id": "d982241b.ffa208",
        "type": "debug",
        "z": "ef737c5d.8fdfe",
        "name": "entities payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 320,
        "wires": []
    },
    {
        "id": "3b2aad13.91b0a2",
        "type": "comment",
        "z": "b798ba0e.5afac8",
        "name": "inkom, straatlamp uit om 23:59",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "3019eb30.7e9084",
        "type": "inject",
        "z": "b798ba0e.5afac8",
        "name": "Schakelaar",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "59 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"On\":false}",
        "payloadType": "json",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "3998369d.eedd9a",
                "403dbca6.87f544",
                "34275ea6.1feb1a",
                "8d0c7b31.16179"
            ]
        ]
    },
    {
        "id": "117a60bd.55076f",
        "type": "debug",
        "z": "b798ba0e.5afac8",
        "name": "Inkom, straatlamp schakelen",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 120,
        "wires": []
    },
    {
        "id": "fc1658fa.e1f1a8",
        "type": "inject",
        "z": "b798ba0e.5afac8",
        "name": "07:00",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "a94048ec.49bee8"
            ]
        ]
    },
    {
        "id": "f11f1529.85d2a8",
        "type": "debug",
        "z": "b798ba0e.5afac8",
        "name": "Opstaan gedaan?",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 320,
        "wires": []
    },
    {
        "id": "a94048ec.49bee8",
        "type": "function",
        "z": "b798ba0e.5afac8",
        "name": "data",
        "func": "let circadian           = global.get('circadian')\nlet lights              = circadian.lights\nlet switches            = circadian.switches\n\nlet brightness          = circadian.settings.brightness_min\nlet colorTemperature    = circadian.settings.color_temp_min\nlet entities = []\n\nif (switches.ontwaak_felix == 'on') {\n    for (const light in lights) {\n        let temp = lights[light]['name']\n        if (temp.includes('Felix') && (temp.includes('Vloerlamp') || temp.includes('Bedlamp'))) {\n           entities.push(parseInt(light))\n        }\n    }\n}\nnode.warn(entities)\nmsg = {\n    topic: entities,\n    payload: {\n        data: {\n            colorTemperature: 10,\n            brightness: brightness,\n            transition: 30\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "f11f1529.85d2a8"
            ]
        ]
    },
    {
        "id": "3c15aea6.9ea51a",
        "type": "inject",
        "z": "eeb0c954.d943d",
        "name": "ticker",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "*/3 6-22 * * 1,2,3,4,5,6",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "b42b2b12.faf3b"
            ]
        ]
    },
    {
        "id": "212b271d.bb7ea8",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "uit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "5002c15a.013d9"
            ]
        ]
    },
    {
        "id": "5002c15a.013d9",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "aan/uit",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "praktijk.states.agenda",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 400,
        "wires": [
            [
                "66c05c69.f1a314",
                "6a2bbd85.7c0bec"
            ]
        ]
    },
    {
        "id": "81f98c70.b0533",
        "type": "within-time-switch",
        "z": "eeb0c954.d943d",
        "name": "praktijk",
        "positionConfig": "7b789b02.b3d6e4",
        "startTime": "praktijk.blok_agenda.start",
        "startTimeType": "global",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "praktijk.blok_agenda.end",
        "endTimeType": "global",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeRestrictions": "",
        "timeRestrictionsType": "none",
        "timeDays": "1,2,3,4,5,6",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "tsCompare": "0",
        "x": 270,
        "y": 420,
        "wires": [
            [
                "6ca88ad0.788cf4"
            ],
            [
                "212b271d.bb7ea8"
            ]
        ]
    },
    {
        "id": "839b7938.f219f8",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "gestuurd?",
        "property": "praktijk.agendagestuurd",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 180,
        "wires": [
            [
                "ee26048a.733e3"
            ]
        ]
    },
    {
        "id": "b42b2b12.faf3b",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "gestuurd?",
        "property": "praktijk.agendagestuurd",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 240,
        "wires": [
            [
                "8cbf2dda.ec4c88"
            ]
        ]
    },
    {
        "id": "e9ecbbb.f2dd548",
        "type": "inject",
        "z": "eeb0c954.d943d",
        "name": "calendar",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "0 7-19 * * 1,2,3,4,5,6",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "on",
        "payloadType": "str",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "839b7938.f219f8"
            ]
        ]
    },
    {
        "id": "66c05c69.f1a314",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "next",
        "func": "let payload =           msg.payload\nlet praktijk =          global.get(\"praktijk\") || {}\nlet blokken_agenda =    praktijk.blokken_agenda || []\nlet blok_agenda =       praktijk.blok_agenda || []\nlet blok_inkom =        praktijk.blok_inkom || {}\n\nlet now = new Date()\nif(payload == 'on' || (payload == \"off\" && blok_agenda.end > now)) return null\n\nlet start =         now.setHours(0,0,0)\nlet end =           new Date(start).setHours(0,1,0)\nlet startTime =     new Date(start)\nlet endTime =       new Date(end)\nlet noBlock = {\n    start:      start,\n    end:        end,\n    startTime:  startTime,\n    endTime:    endTime\n}\n\nif(blokken_agenda.length > 0){\n    temp = blokken_agenda.shift()\n    blok_agenda = {\n        start:      new Date(temp.start).getTime(),\n        end:        new Date(temp.end).getTime(),\n        startTime:  temp.start,\n        endTime:    temp.end\n    }\n    msg = {payload: {\n        blok_agenda  : blok_agenda,\n        blokken_agenda : blokken_agenda\n        }\n    }\n} else {\n    blok_agenda = noBlock\n    blok_agenda = noBlock\n    msg = {payload: \"geen blokken\"}\n}\n\nif(blok_inkom.hasOwnProperty('start')){\n    blok_inkom.startTime =   blok_inkom.start\n    blok_inkom.endTime =     blok_inkom.end\n    blok_inkom.start =       new Date(blok_inkom.startTime).getTime()\n    blok_inkom.end =         new Date(blok_inkom.endTime).getTime()\n} else {\n    blok_inkom = noBlock\n}\n\npraktijk.blokken_agenda = blokken_agenda\npraktijk.blok_agenda = blok_agenda\npraktijk.blok_inkom = blok_inkom\nglobal.set(\"praktijk\",praktijk)\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 340,
        "wires": [
            [
                "de12ad6e.0a7ca"
            ]
        ]
    },
    {
        "id": "77b7e9a7.922b6",
        "type": "ical-upcoming",
        "z": "eeb0c954.d943d",
        "confignode": "61506dc1.940954",
        "checkall": false,
        "cron": "",
        "timeout": "",
        "timeoutUnits": "seconds",
        "name": "consultaties",
        "offset": "",
        "endpreview": "1",
        "endpreviewUnits": "days",
        "preview": "1",
        "previewUnits": "days",
        "pastview": "1",
        "pastviewUnits": "days",
        "trigger": "always",
        "filter": "",
        "x": 590,
        "y": 340,
        "wires": [
            [
                "12a621d4.d53bae"
            ]
        ]
    },
    {
        "id": "de12ad6e.0a7ca",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "consultaties",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1190,
        "y": 340,
        "wires": []
    },
    {
        "id": "12a621d4.d53bae",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "set agenda",
        "func": "let voorloop = 60;\nlet uitloop = 60;\nlet praktijk = global.get(\"praktijk\") || {};\nlet blokken_agenda = [];\nlet blok_inkom = {};\n\n// get calendar events, take out all-day events\nevents = msg.payload.filter(function(event) {\n    return event.allDay !== true;\n});\n\nif (events.length > 0){\n    // take out irrelevant properties\n    events = events.map(({eventStart, eventEnd}) => ({eventStart, eventEnd}));\n    // insert voorloop and uitloop\n    events.forEach(function(item, index) {\n        events[index].eventStart.setMinutes(item.eventStart.getMinutes() - voorloop);\n        events[index].eventEnd.setMinutes(item.eventEnd.getMinutes() + uitloop);\n    });\n    blok_inkom.start = events[0].eventStart;\n    blok_inkom.end = events[events.length - 1].eventEnd;\n\n    eventStart = events[0].eventStart;\n    eventEnd   = events[0].eventEnd;\n    events.forEach(function(event) {\n        if (event.eventStart > eventEnd) {\n            blokken_agenda.push({start: eventStart, end: eventEnd});\n            eventStart = event.eventStart;\n        }\n        eventEnd = event.eventEnd;\n    });\n    blokken_agenda.push({start: eventStart, end: eventEnd});\n\n    // take out expired events\n    now = new Date();\n    blokken_agenda = blokken_agenda.filter(function(blok){\n        return blok.end > now;\n    });\n}\n\npraktijk.blokken_agenda = blokken_agenda;\npraktijk.blok_inkom = blok_inkom;\nglobal.set(\"praktijk\", praktijk);\n\nreturn {payload: true};\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 340,
        "wires": [
            [
                "66c05c69.f1a314"
            ]
        ]
    },
    {
        "id": "6ca88ad0.788cf4",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "aan",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "5002c15a.013d9"
            ]
        ]
    },
    {
        "id": "511165e0.f6f50c",
        "type": "ical-upcoming",
        "z": "eeb0c954.d943d",
        "confignode": "3e48c330.8414ec",
        "cron": "",
        "timeout": "",
        "timeoutUnits": "seconds",
        "name": "specials",
        "offset": "",
        "endpreview": "1",
        "endpreviewUnits": "days",
        "pastview": "1",
        "pastviewUnits": "days",
        "trigger": "match",
        "filter": "oga|raatlamp|rainspot",
        "x": 580,
        "y": 600,
        "wires": [
            [
                "fe44fb82.fb735"
            ]
        ]
    },
    {
        "id": "5c2e1e96.5cc4d",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "specials",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "fe44fb82.fb735",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "set specials",
        "func": "let voorloop = 0\nlet uitloop = 0\nlet praktijk = global.get(\"praktijk\") || {}\nlet blokken_special = []\n\n// get calendar events, take out all-day events\nevents = msg.payload.filter(function(event) {\n    return event.allDay !== true\n});\n\nif (events.length > 0){\n    // take out irrelevant properties\n    events = events.map(({eventStart, eventEnd}) => ({eventStart, eventEnd}))\n\n    eventStart = events[0].eventStart\n    eventEnd   = events[0].eventEnd\n    events.forEach(function(event) {\n        if (event.eventStart > eventEnd) {\n            blokken_special.push({start: eventStart, end: eventEnd})\n            eventStart = event.eventStart\n        }\n        eventEnd = event.eventEnd\n    });\n    blokken_special.push({start: eventStart, end: eventEnd})\n\n    // take out expired events\n    now = new Date()\n    blokken_special = blokken_special.filter(function(special){\n        return special.end > now\n    })\n}\n\npraktijk.blokken_special = blokken_special\nglobal.set(\"praktijk\", praktijk)\n\nreturn {payload: true}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 600,
        "wires": [
            [
                "6a557c5a.0f20ec"
            ]
        ]
    },
    {
        "id": "6a557c5a.0f20ec",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "next",
        "func": "let payload     = msg.payload\nlet praktijk    = global.get(\"praktijk\") || {}\n//let specials    = praktijk.specials || []\n//let special     = praktijk.special\n\nlet blokken_special    = praktijk.blokken_special || []\nlet blok_special     = praktijk.blok_special\n\nlet now = new Date()\nif(payload == \"on\" || (payload == \"off\" && blok_special.end > now)) return null\n\nif(blokken_special.length > 0){\n    temp = blokken_special.shift()\n\n    blok_special = {\n        start:      new Date(temp.start).getTime(),\n        end:        new Date(temp.end).getTime(),\n        startTime:  temp.start,\n        endTime:    temp.end\n    }\n    msg = {payload: {\n        blok_special  :     blok_special,\n        blokken_special :   blokken_special\n        }\n    }\n} else {\n    start =         new Date().setHours(0,0,0)\n    startTime =     new Date(start)\n    end =           new Date(start).setHours(0,1,0)\n    endTime =       new Date(end)\n    blok_special = {\n        start:      start,\n        end:        end,\n        startTime:  startTime,\n        endTime:    endTime\n    }\n    msg = {payload: \"geen speciallekes\"}\n}\n\npraktijk.blokken_special = blokken_special\npraktijk.blok_special = blok_special\nglobal.set(\"praktijk\",praktijk)\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "x": 980,
        "y": 600,
        "wires": [
            [
                "5c2e1e96.5cc4d"
            ]
        ]
    },
    {
        "id": "2b747a59.e8cd4e",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "aan/uit",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "praktijk.states.straatlamp",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 660,
        "wires": [
            [
                "6a557c5a.0f20ec",
                "2d0f0552.a85c6a"
            ]
        ]
    },
    {
        "id": "80070cab.a16c38",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "aan",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 660,
        "wires": [
            [
                "2b747a59.e8cd4e"
            ]
        ]
    },
    {
        "id": "2a245b1a.d6994c",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "uit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 700,
        "wires": [
            [
                "2b747a59.e8cd4e"
            ]
        ]
    },
    {
        "id": "12b351da.5bf85e",
        "type": "delay",
        "z": "eeb0c954.d943d",
        "name": "delay",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 140,
        "y": 680,
        "wires": [
            [
                "a03fe1f0.0fa3d"
            ]
        ]
    },
    {
        "id": "7810f8e1.33dc3",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set deur, boven",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "{\"On\": true}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "{\"On\":false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 120,
        "wires": [
            [
                "fd51d01a.909778",
                "e3e672ae.cb7b48",
                "4779e073.8539f"
            ]
        ]
    },
    {
        "id": "4a5093dd.73179c",
        "type": "suncron",
        "z": "eeb0c954.d943d",
        "name": "sun test",
        "lat": "51.3597424",
        "lon": "4.4833742",
        "replay": true,
        "ejectScheduleOnUpdate": false,
        "sunrisePayload": "day",
        "sunrisePayloadType": "str",
        "sunriseTopic": "",
        "sunriseOffsetType": 1,
        "sunriseOffsetHours": 0,
        "sunriseOffsetMinutes": 0,
        "sunriseOffset": 0,
        "sunriseEndPayload": "",
        "sunriseEndPayloadType": "str",
        "sunriseEndTopic": "",
        "sunriseEndOffsetType": 1,
        "sunriseEndOffsetHours": 0,
        "sunriseEndOffsetMinutes": 0,
        "sunriseEndOffset": 0,
        "goldenHourEndPayload": "",
        "goldenHourEndPayloadType": "str",
        "goldenHourEndTopic": "",
        "goldenHourEndOffsetType": 1,
        "goldenHourEndOffsetHours": 0,
        "goldenHourEndOffsetMinutes": 0,
        "goldenHourEndOffset": 0,
        "solarNoonPayload": "",
        "solarNoonPayloadType": "str",
        "solarNoonTopic": "",
        "solarNoonOffsetType": 1,
        "solarNoonOffsetHours": 0,
        "solarNoonOffsetMinutes": 0,
        "solarNoonOffset": 0,
        "goldenHourPayload": "",
        "goldenHourPayloadType": "str",
        "goldenHourTopic": "",
        "goldenHourOffsetType": 1,
        "goldenHourOffsetHours": 0,
        "goldenHourOffsetMinutes": 0,
        "goldenHourOffset": 0,
        "sunsetStartPayload": "",
        "sunsetStartPayloadType": "str",
        "sunsetStartTopic": "",
        "sunsetStartOffsetType": 1,
        "sunsetStartOffsetHours": 0,
        "sunsetStartOffsetMinutes": 0,
        "sunsetStartOffset": 0,
        "sunsetPayload": "",
        "sunsetPayloadType": "json",
        "sunsetTopic": "",
        "sunsetOffsetType": 1,
        "sunsetOffsetHours": 0,
        "sunsetOffsetMinutes": 0,
        "sunsetOffset": 0,
        "duskPayload": "dusk",
        "duskPayloadType": "str",
        "duskTopic": "",
        "duskOffsetType": 1,
        "duskOffsetHours": 0,
        "duskOffsetMinutes": 0,
        "duskOffset": 0,
        "nauticalDuskPayload": "night",
        "nauticalDuskPayloadType": "str",
        "nauticalDuskTopic": "",
        "nauticalDuskOffsetType": 1,
        "nauticalDuskOffsetHours": 0,
        "nauticalDuskOffsetMinutes": 0,
        "nauticalDuskOffset": 0,
        "nightPayload": "",
        "nightPayloadType": "str",
        "nightTopic": "",
        "nightOffsetType": 1,
        "nightOffsetHours": 0,
        "nightOffsetMinutes": 0,
        "nightOffset": 0,
        "nadirPayload": "",
        "nadirPayloadType": "str",
        "nadirTopic": "",
        "nadirOffsetType": 1,
        "nadirOffsetHours": 0,
        "nadirOffsetMinutes": 0,
        "nadirOffset": 0,
        "nightEndPayload": "",
        "nightEndPayloadType": "str",
        "nightEndTopic": "",
        "nightEndOffsetType": 1,
        "nightEndOffsetHours": 0,
        "nightEndOffsetMinutes": 0,
        "nightEndOffset": 0,
        "nauticalDawnPayload": "dawn",
        "nauticalDawnPayloadType": "str",
        "nauticalDawnTopic": "",
        "nauticalDawnOffsetType": 1,
        "nauticalDawnOffsetHours": 0,
        "nauticalDawnOffsetMinutes": 0,
        "nauticalDawnOffset": 0,
        "dawnPayload": "",
        "dawnPayloadType": "str",
        "dawnTopic": "",
        "dawnOffsetType": 1,
        "dawnOffsetHours": 0,
        "dawnOffsetMinutes": 0,
        "dawnOffset": 0,
        "x": 110,
        "y": 60,
        "wires": [
            [
                "d824926e.c03a28"
            ]
        ]
    },
    {
        "id": "d824926e.c03a28",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "praktijk.sun_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload = \"day\" ? \"off\" : \"on\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "sun",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "a03fe1f0.0fa3d",
        "type": "within-time-switch",
        "z": "eeb0c954.d943d",
        "name": "straatlamp",
        "positionConfig": "7b789b02.b3d6e4",
        "startTime": "praktijk.blok_special.start",
        "startTimeType": "global",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "praktijk.blok_special.end",
        "endTimeType": "global",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeRestrictions": "",
        "timeRestrictionsType": "none",
        "timeDays": "*",
        "timeOnlyOddDays": true,
        "timeOnlyEvenDays": true,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "tsCompare": "0",
        "x": 280,
        "y": 680,
        "wires": [
            [
                "80070cab.a16c38"
            ],
            [
                "2a245b1a.d6994c"
            ]
        ]
    },
    {
        "id": "960f1791.6227d8",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "agenda uit",
        "links": [
            "58f463f9.95ee4c",
            "f6ad50a3.67911",
            "36e06774.d6558",
            "b1a1ce68.513b2"
        ],
        "x": 1135,
        "y": 400,
        "wires": []
    },
    {
        "id": "959c576d.3ff368",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "special uit",
        "links": [
            "36e06774.d6558"
        ],
        "x": 1135,
        "y": 660,
        "wires": []
    },
    {
        "id": "36e06774.d6558",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "straatlamp in",
        "links": [
            "df4778f9.862a9",
            "959c576d.3ff368",
            "960f1791.6227d8",
            "6a8411ce.7eb94"
        ],
        "x": 615,
        "y": 240,
        "wires": [
            [
                "84c468d3.76f4b8"
            ]
        ]
    },
    {
        "id": "58f463f9.95ee4c",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "praktijik in",
        "links": [
            "960f1791.6227d8"
        ],
        "x": 615,
        "y": 120,
        "wires": [
            [
                "7810f8e1.33dc3"
            ]
        ]
    },
    {
        "id": "ee26048a.733e3",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "calendar uit",
        "links": [
            "950b4130.80c738",
            "5c31d762.1330f"
        ],
        "x": 385,
        "y": 180,
        "wires": []
    },
    {
        "id": "950b4130.80c738",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "calendar in",
        "links": [
            "2197d074.c1806",
            "ee26048a.733e3"
        ],
        "x": 385,
        "y": 340,
        "wires": [
            [
                "77b7e9a7.922b6"
            ]
        ]
    },
    {
        "id": "5c31d762.1330f",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "specials in",
        "links": [
            "2197d074.c1806",
            "ee26048a.733e3"
        ],
        "x": 385,
        "y": 600,
        "wires": [
            [
                "511165e0.f6f50c"
            ]
        ]
    },
    {
        "id": "71dff3f9.f4f3cc",
        "type": "delay",
        "z": "eeb0c954.d943d",
        "name": "delay",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 140,
        "y": 340,
        "wires": [
            [
                "81f98c70.b0533"
            ]
        ]
    },
    {
        "id": "fca63b0a.4fb7c8",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "agenda delay in",
        "links": [
            "2197d074.c1806"
        ],
        "x": 45,
        "y": 340,
        "wires": [
            [
                "71dff3f9.f4f3cc"
            ]
        ]
    },
    {
        "id": "8cbf2dda.ec4c88",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "ticker uit",
        "links": [
            "27776424.fdf5f4",
            "fbf9d8cc.3eabb",
            "682dcf78.60c28",
            "b4671062.16a35",
            "6144d9a8.767c38",
            "69be4cfc.378c14"
        ],
        "x": 385,
        "y": 240,
        "wires": []
    },
    {
        "id": "27776424.fdf5f4",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "agenda in",
        "links": [
            "8cbf2dda.ec4c88"
        ],
        "x": 45,
        "y": 420,
        "wires": [
            [
                "81f98c70.b0533"
            ]
        ]
    },
    {
        "id": "6a2bbd85.7c0bec",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "praktijk.states.agenda",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "praktijk.states.straatlamp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Praktijk",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 400,
        "wires": [
            [
                "960f1791.6227d8"
            ]
        ]
    },
    {
        "id": "2d0f0552.a85c6a",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "praktijk.states.straatlamp",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Straatlamp",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 660,
        "wires": [
            [
                "959c576d.3ff368"
            ]
        ]
    },
    {
        "id": "84c468d3.76f4b8",
        "type": "function",
        "z": "eeb0c954.d943d",
        "name": "set straatlamp",
        "func": "let payload =   msg.payload\nlet topic =     msg.topic\nlet sun =       global.get(\"praktijk.sun_position\")\nlet agenda =    global.get(\"praktijk.states.agenda\")\nlet gestuurd =  global.get(\"praktijk.agendagestuurd\")\n\nnode.warn('Straatlamp: ' + payload + ',sun: ' + sun)\nif (\n        (sun != \"day\" && payload == \"on\" && agenda == \"on\") || \n        (payload == \"off\" && agenda == \"off\") ||\n        (payload == \"off\" && topic == \"sun\")\n    )\n    {\n        node.warn('Straatlamp: ' + payload)\n        newMsg = {\"payload\" : {\"On\" : payload == 'on' ? true : false }}\n    } else { \n        newMsg = null\n    }\n       \nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 240,
        "wires": [
            [
                "b8ae836.9e61f",
                "31e73bc6.f8530c"
            ]
        ]
    },
    {
        "id": "fbf9d8cc.3eabb",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "special delay in",
        "links": [
            "2197d074.c1806",
            "8cbf2dda.ec4c88"
        ],
        "x": 45,
        "y": 680,
        "wires": [
            [
                "12b351da.5bf85e"
            ]
        ]
    },
    {
        "id": "e121d94a.a91018",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set inkom",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "on",
                "fromt": "str",
                "to": "{\"On\":true}",
                "tot": "json"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "off",
                "fromt": "str",
                "to": "{\"On\":false}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 180,
        "wires": [
            [
                "b42500c9.0c7e38",
                "5c4c7497.39582c"
            ]
        ]
    },
    {
        "id": "fc0d87bf.ee945",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "beneden in",
        "links": [
            "1b5162ad.0b52ed"
        ],
        "x": 615,
        "y": 180,
        "wires": [
            [
                "e121d94a.a91018"
            ]
        ]
    },
    {
        "id": "500a87da.efb918",
        "type": "switch",
        "z": "eeb0c954.d943d",
        "name": "aan/uit",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "praktijk.states.inkom",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 500,
        "wires": [
            [
                "f63ca832.6d6ac8"
            ]
        ]
    },
    {
        "id": "72fb58e2.5c72",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "aan",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "on",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 500,
        "wires": [
            [
                "500a87da.efb918"
            ]
        ]
    },
    {
        "id": "521cc3fe.9190ec",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "uit",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "off",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 540,
        "wires": [
            [
                "500a87da.efb918"
            ]
        ]
    },
    {
        "id": "4c86ca86.4fb114",
        "type": "within-time-switch",
        "z": "eeb0c954.d943d",
        "name": "inkom",
        "positionConfig": "7b789b02.b3d6e4",
        "startTime": "praktijk.blok_inkom.start",
        "startTimeType": "global",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "endTime": "praktijk.blok_inkom.end",
        "endTimeType": "global",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "timeRestrictions": "",
        "timeRestrictionsType": "none",
        "timeDays": "*",
        "timeOnlyOddDays": false,
        "timeOnlyEvenDays": false,
        "timeMonths": "*",
        "timedatestart": "",
        "timedateend": "",
        "propertyStart": "",
        "propertyStartType": "none",
        "propertyStartCompare": "true",
        "propertyStartThreshold": "",
        "propertyStartThresholdType": "num",
        "startTimeAlt": "",
        "startTimeAltType": "entered",
        "startOffsetAlt": 0,
        "startOffsetAltType": "none",
        "startOffsetAltMultiplier": 60000,
        "propertyEnd": "",
        "propertyEndType": "none",
        "propertyEndCompare": "true",
        "propertyEndThreshold": "",
        "propertyEndThresholdType": "num",
        "endTimeAlt": "",
        "endTimeAltType": "entered",
        "endOffsetAlt": 0,
        "endOffsetAltType": "none",
        "endOffsetAltMultiplier": 60000,
        "tsCompare": "0",
        "x": 260,
        "y": 520,
        "wires": [
            [
                "72fb58e2.5c72"
            ],
            [
                "521cc3fe.9190ec"
            ]
        ]
    },
    {
        "id": "f63ca832.6d6ac8",
        "type": "change",
        "z": "eeb0c954.d943d",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "praktijk.states.inkom",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Inkom",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 500,
        "wires": [
            [
                "1b5162ad.0b52ed"
            ]
        ]
    },
    {
        "id": "69be4cfc.378c14",
        "type": "link in",
        "z": "eeb0c954.d943d",
        "name": "inkom in",
        "links": [
            "8cbf2dda.ec4c88"
        ],
        "x": 45,
        "y": 520,
        "wires": [
            [
                "4c86ca86.4fb114"
            ]
        ]
    },
    {
        "id": "1b5162ad.0b52ed",
        "type": "link out",
        "z": "eeb0c954.d943d",
        "name": "inkom uit",
        "links": [
            "fc0d87bf.ee945"
        ],
        "x": 1135,
        "y": 500,
        "wires": []
    },
    {
        "id": "31e73bc6.f8530c",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Straatlamp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 220,
        "wires": []
    },
    {
        "id": "5c4c7497.39582c",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Beneden",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 140,
        "wires": []
    },
    {
        "id": "4779e073.8539f",
        "type": "debug",
        "z": "eeb0c954.d943d",
        "name": "Verdiep, deur",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 20,
        "wires": []
    },
    {
        "id": "e3e672ae.cb7b48",
        "type": "hb-control",
        "z": "eeb0c954.d943d",
        "name": "Inkom Boven",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Boven00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 0,
        "x": 1190,
        "y": 60,
        "wires": []
    },
    {
        "id": "fd51d01a.909778",
        "type": "hb-control",
        "z": "eeb0c954.d943d",
        "name": "Inkom Deur",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Deur00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 0,
        "x": 1190,
        "y": 100,
        "wires": []
    },
    {
        "id": "b42500c9.0c7e38",
        "type": "hb-control",
        "z": "eeb0c954.d943d",
        "name": "Inkom Beneden",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Beneden00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 0,
        "x": 1200,
        "y": 180,
        "wires": []
    },
    {
        "id": "b8ae836.9e61f",
        "type": "hb-control",
        "z": "eeb0c954.d943d",
        "name": "Inkom Straatlamp",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Straatlamp00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 0,
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "3998369d.eedd9a",
        "type": "hb-control",
        "z": "b798ba0e.5afac8",
        "name": "Inkom Beneden",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Beneden00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 1,
        "x": 460,
        "y": 40,
        "wires": [
            [
                "117a60bd.55076f"
            ]
        ]
    },
    {
        "id": "403dbca6.87f544",
        "type": "hb-control",
        "z": "b798ba0e.5afac8",
        "name": "Inkom Boven",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Boven00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 1,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "117a60bd.55076f"
            ]
        ]
    },
    {
        "id": "34275ea6.1feb1a",
        "type": "hb-control",
        "z": "b798ba0e.5afac8",
        "name": "Inkom Deur",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Deur00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 1,
        "x": 450,
        "y": 160,
        "wires": [
            [
                "117a60bd.55076f"
            ]
        ]
    },
    {
        "id": "8d0c7b31.16179",
        "type": "hb-control",
        "z": "b798ba0e.5afac8",
        "name": "Inkom Straatlamp",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Straatlamp00000049",
        "conf": "344d697e.5fd5fe",
        "outputs": 1,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "117a60bd.55076f"
            ]
        ]
    },
    {
        "id": "304d6b42.34af4c",
        "type": "hb-event",
        "z": "af688e5.b55d57",
        "name": "Bureau Circadisch",
        "Homebridge": "homebridge",
        "Manufacturer": "Default-Manufacturer",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28Default-ManufacturerBureau Circadisch00000049",
        "conf": "344d697e.5fd5fe",
        "sendInitialState": false,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "3195f6c9.98eaca"
            ]
        ]
    },
    {
        "id": "e665f385.bbe028",
        "type": "hb-event",
        "z": "af688e5.b55d57",
        "name": "Felix Circadisch",
        "Homebridge": "homebridge",
        "Manufacturer": "Default-Manufacturer",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28Default-ManufacturerFelix Circadisch00000049",
        "conf": "344d697e.5fd5fe",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "8a70d90e.1c95c8"
            ]
        ]
    },
    {
        "id": "573feae4.f5d5a4",
        "type": "hb-event",
        "z": "af688e5.b55d57",
        "name": "Praktijk Agendagestuurd",
        "Homebridge": "homebridge",
        "Manufacturer": "Default-Manufacturer",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28Default-ManufacturerPraktijk Agendagestuurd00000049",
        "conf": "344d697e.5fd5fe",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "de166f14.04fb3"
            ]
        ]
    },
    {
        "id": "3195f6c9.98eaca",
        "type": "change",
        "z": "af688e5.b55d57",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "circadian.switches.circadisch_bureau",
                "pt": "global",
                "to": "msg.payload.On = 1 ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "circadian.switches",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 100,
        "wires": [
            [
                "6288e68c.a272",
                "ea0478adc18d6006"
            ]
        ]
    },
    {
        "id": "8a70d90e.1c95c8",
        "type": "change",
        "z": "af688e5.b55d57",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "circadian.switches.circadisch_felix",
                "pt": "global",
                "to": "msg.payload.On = 1 ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "circadian.switches",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 160,
        "wires": [
            [
                "6288e68c.a272"
            ]
        ]
    },
    {
        "id": "de166f14.04fb3",
        "type": "change",
        "z": "af688e5.b55d57",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "praktijk.agendagestuurd",
                "pt": "global",
                "to": "msg.payload.On = 1 ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "praktijk",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 280,
        "wires": [
            [
                "2197d074.c1806",
                "6288e68c.a272"
            ]
        ]
    },
    {
        "id": "7302852c.5e9e84",
        "type": "tradfri-light-control",
        "z": "7535b2d2.99fc5c",
        "gateway": "3a720637.38a402",
        "name": "IKEA lights",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 530,
        "y": 80,
        "wires": []
    },
    {
        "id": "994c6b54.5d27c8",
        "type": "tradfri-light-control",
        "z": "7535b2d2.99fc5c",
        "gateway": "3a720637.38a402",
        "name": "IKEA lights",
        "action": "{}",
        "accessories": [],
        "groups": [],
        "x": 530,
        "y": 140,
        "wires": []
    },
    {
        "id": "9ecf5be4.373e8",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "global.circadian",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 780,
        "wires": []
    },
    {
        "id": "6bd72b4c.3e5acc",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "circadian",
        "payloadType": "global",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "9ecf5be4.373e8"
            ]
        ]
    },
    {
        "id": "2b87ce53.b2e8b2",
        "type": "comment",
        "z": "af688e5.b55d57",
        "name": "Virtual HB switches",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "8c783443.62489",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 01 * * *",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "acc78091.ea4ed"
            ]
        ]
    },
    {
        "id": "acc78091.ea4ed",
        "type": "sun-position",
        "z": "af688e5.b55d57",
        "name": "sun %",
        "positionConfig": "7b789b02.b3d6e4",
        "rules": [],
        "onlyOnChange": "true",
        "topic": "",
        "outputs": 1,
        "start": "",
        "startType": "none",
        "startOffset": 0,
        "startOffsetType": "none",
        "startOffsetMultiplier": 60000,
        "end": "",
        "endType": "none",
        "endOffset": 0,
        "endOffsetType": "none",
        "endOffsetMultiplier": 60000,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "c1cb07db.8f1bf8"
            ]
        ]
    },
    {
        "id": "c1cb07db.8f1bf8",
        "type": "change",
        "z": "af688e5.b55d57",
        "name": "set circadian times",
        "rules": [
            {
                "t": "set",
                "p": "circadian.settings",
                "pt": "global",
                "to": "{\"bulb_max\":4000,\"bulb_min\":2200,\"set_max\":3500,\"set_min\":2500,\"brightness_max\":90,\"brightness_min\":65}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "circadian.times.dawn",
                "pt": "global",
                "to": "payload.times.nauticalDawn.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "circadian.times.sunrise",
                "pt": "global",
                "to": "payload.times.sunrise.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "circadian.times.sunset",
                "pt": "global",
                "to": "payload.times.sunset.value",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "circadian.times.dusk",
                "pt": "global",
                "to": "payload.times.nauticalDusk.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 420,
        "wires": [
            [
                "fe9a3513.4fbe68"
            ]
        ]
    },
    {
        "id": "50aaf43a.f6c7e4",
        "type": "comment",
        "z": "af688e5.b55d57",
        "name": "Intitialize global parameters",
        "info": "",
        "x": 180,
        "y": 340,
        "wires": []
    },
    {
        "id": "fe9a3513.4fbe68",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "set circadian",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "8a2d9888.d39c1",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "acc78091.ea4ed",
                "b715a16259c9c7de",
                "8f67cecaac89f45b",
                "88b9bc3a2de4b5ca",
                "e73dfe4d8df008e8",
                "42fdf1a82677a1c6"
            ]
        ]
    },
    {
        "id": "2197d074.c1806",
        "type": "link out",
        "z": "af688e5.b55d57",
        "name": "Agendagestuurd uit",
        "links": [
            "fca63b0a.4fb7c8",
            "950b4130.80c738",
            "fbf9d8cc.3eabb",
            "5c31d762.1330f"
        ],
        "x": 815,
        "y": 280,
        "wires": []
    },
    {
        "id": "6288e68c.a272",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "Switches",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 200,
        "wires": []
    },
    {
        "id": "74141dbd.730e74",
        "type": "hb-event",
        "z": "af688e5.b55d57",
        "name": "Felix Ontwaaklicht",
        "Homebridge": "homebridge",
        "Manufacturer": "Default-Manufacturer",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28Default-ManufacturerFelix Ontwaaklicht00000049",
        "conf": "344d697e.5fd5fe",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "a623591a.79963"
            ]
        ]
    },
    {
        "id": "a623591a.79963",
        "type": "change",
        "z": "af688e5.b55d57",
        "name": "set global",
        "rules": [
            {
                "t": "set",
                "p": "circadian.switches.ontwaak_felix",
                "pt": "global",
                "to": "msg.payload.On = 1 ? \"on\" : \"off\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "circadian.switches",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "6288e68c.a272"
            ]
        ]
    },
    {
        "id": "42fdf1a82677a1c6",
        "type": "hb-status",
        "z": "af688e5.b55d57",
        "name": "Bureau Circadisch",
        "Homebridge": "homebridge",
        "Manufacturer": "Default-Manufacturer",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28Default-ManufacturerBureau Circadisch00000049",
        "conf": "344d697e.5fd5fe",
        "x": 410,
        "y": 500,
        "wires": [
            [
                "3195f6c9.98eaca"
            ]
        ]
    },
    {
        "id": "b715a16259c9c7de",
        "type": "hb-status",
        "z": "af688e5.b55d57",
        "name": "Felix Circadisch",
        "Homebridge": "homebridge",
        "Manufacturer": "Default-Manufacturer",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28Default-ManufacturerFelix Circadisch00000049",
        "conf": "344d697e.5fd5fe",
        "x": 400,
        "y": 560,
        "wires": [
            [
                "8a70d90e.1c95c8"
            ]
        ]
    },
    {
        "id": "8f67cecaac89f45b",
        "type": "hb-status",
        "z": "af688e5.b55d57",
        "name": "Felix Ontwaaklicht",
        "Homebridge": "homebridge",
        "Manufacturer": "Default-Manufacturer",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28Default-ManufacturerFelix Ontwaaklicht00000049",
        "conf": "344d697e.5fd5fe",
        "x": 410,
        "y": 620,
        "wires": [
            [
                "a623591a.79963"
            ]
        ]
    },
    {
        "id": "88b9bc3a2de4b5ca",
        "type": "hb-status",
        "z": "af688e5.b55d57",
        "name": "Inkom Straatlamp",
        "Homebridge": "homebridge",
        "Manufacturer": "Shelly",
        "Service": "Switch",
        "device": "homebridgeCC:22:3D:E3:CE:28ShellyInkom Straatlamp00000049",
        "conf": "344d697e.5fd5fe",
        "x": 410,
        "y": 680,
        "wires": [
            [
                "de166f14.04fb3"
            ]
        ]
    },
    {
        "id": "e73dfe4d8df008e8",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "HB ticker",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 520,
        "wires": []
    },
    {
        "id": "a09f1f3b66defb01",
        "type": "debug",
        "z": "ef737c5d.8fdfe",
        "name": "entities names",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "names",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 380,
        "wires": []
    },
    {
        "id": "b2776d8ad451f9b8",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 860,
        "wires": [
            [
                "d8cb61665becb95c"
            ]
        ]
    },
    {
        "id": "7d95e515c3360d02",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "Lights status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 860,
        "wires": []
    },
    {
        "id": "d8cb61665becb95c",
        "type": "function",
        "z": "af688e5.b55d57",
        "name": "Lights",
        "func": "let circadian = global.get('circadian')\nlet lights = circadian.lights\nlet lijst = []\n\nfor (var light in lights) {\n    let light1 = lights[light]\n//    if(light1.name.includes('Bureau')){\n        let temp = light1.name + ' (' + light1.isOn + ')'\n        lijst.push(temp)\n//    }\n}\nmsg.payload = lijst\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 860,
        "wires": [
            [
                "7d95e515c3360d02"
            ]
        ]
    },
    {
        "id": "a76d2327be262b28",
        "type": "tradfri-light-control",
        "z": "af688e5.b55d57",
        "gateway": "3a720637.38a402",
        "name": "Bureau groep",
        "action": "{}",
        "accessories": [
            ""
        ],
        "groups": [
            "131074",
            "131074",
            "131074"
        ],
        "x": 980,
        "y": 780,
        "wires": []
    },
    {
        "id": "72415e18dc28ead0",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"onOff\":false}",
        "payloadType": "json",
        "x": 770,
        "y": 820,
        "wires": [
            [
                "a76d2327be262b28"
            ]
        ]
    },
    {
        "id": "3130e6f150af0d5d",
        "type": "inject",
        "z": "af688e5.b55d57",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"onOff\":true}",
        "payloadType": "json",
        "x": 770,
        "y": 780,
        "wires": [
            [
                "a76d2327be262b28"
            ]
        ]
    },
    {
        "id": "340b392b64f4cd92",
        "type": "comment",
        "z": "ef737c5d.8fdfe",
        "name": "IKEA lights",
        "info": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "bc355bf81279e6d8",
        "type": "tradfri-monitor",
        "z": "ef737c5d.8fdfe",
        "gateway": "3a720637.38a402",
        "name": "Tradfri monitor",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "8d80ed1299f0421c"
            ]
        ]
    },
    {
        "id": "8d80ed1299f0421c",
        "type": "function",
        "z": "ef737c5d.8fdfe",
        "name": "set monitored states",
        "func": "if (msg.payload.type != 'lightbulb') return\nif(!msg.payload.alive) return {payload: msg.payload.name + ' not alive'}\n\nlet circadian = global.get('circadian')||{}\nif(!circadian.lights) circadian.lights = {}\n\nlet lights = circadian.lights\nlet payload = msg.payload\nlet name = payload.name\nlet isOn = payload.lightbulb.isOn\nlet id = payload.instanceId\n\nset = false\nif (lights.hasOwnProperty(id)) {\n    //if(lights[id]['isOn'] != isOn && lights[id]['name'].includes('Bureau')) {\n    if(lights[id]['isOn'] != isOn) {\n        set = true\n    }\n} else {\n    set = true\n}\nif(set) {\n    circadian['lights'][id] = {\n        \"isOn\": isOn,\n        \"name\": name\n    }\n    global.set('circadian', circadian)\n\n    return {\n        payload: name + ' (' + isOn + ')'\n    }\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 100,
        "wires": [
            [
                "9004f0597913e647",
                "d530536dd765892b"
            ]
        ]
    },
    {
        "id": "d530536dd765892b",
        "type": "switch",
        "z": "ef737c5d.8fdfe",
        "name": "filter: (true)",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "(true)",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 160,
        "wires": [
            [
                "d99375d0610c55b3"
            ]
        ]
    },
    {
        "id": "9004f0597913e647",
        "type": "debug",
        "z": "ef737c5d.8fdfe",
        "name": "set monitored states",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "d99375d0610c55b3",
        "type": "join",
        "z": "ef737c5d.8fdfe",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "10",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 810,
        "y": 160,
        "wires": [
            [
                "9dbd8fba6c17f8b8",
                "cd463f383e624bda"
            ]
        ]
    },
    {
        "id": "cd463f383e624bda",
        "type": "debug",
        "z": "ef737c5d.8fdfe",
        "name": "join out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 100,
        "wires": []
    },
    {
        "id": "9dbd8fba6c17f8b8",
        "type": "change",
        "z": "ef737c5d.8fdfe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 160,
        "wires": [
            [
                "7ec5bf43.163b4"
            ]
        ]
    },
    {
        "id": "ea0478adc18d6006",
        "type": "switch",
        "z": "af688e5.b55d57",
        "name": "filter: on",
        "property": "payload.circadisch_bureau",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 100,
        "wires": [
            [
                "03f030d1a2b7e64e"
            ]
        ]
    },
    {
        "id": "03f030d1a2b7e64e",
        "type": "link out",
        "z": "af688e5.b55d57",
        "name": "bureau circadisch out",
        "links": [
            "b12969ff2dc32f7e"
        ],
        "x": 815,
        "y": 100,
        "wires": []
    },
    {
        "id": "b12969ff2dc32f7e",
        "type": "link in",
        "z": "ef737c5d.8fdfe",
        "name": "circadisch in",
        "links": [
            "03f030d1a2b7e64e"
        ],
        "x": 195,
        "y": 320,
        "wires": [
            [
                "7ec5bf43.163b4"
            ]
        ]
    },
    {
        "id": "7c3e71cd411241e6",
        "type": "debug",
        "z": "af688e5.b55d57",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 220,
        "wires": []
    }
]